[package]
name = "printpdf"
version = "0.7.0"
authors = [
    "Felix Sch√ºtt <felix.schuett@maps4print.com>",
    "Julien Schminke <julien.schminke@web.de",
]
repository = "https://github.com/fschutt/printpdf"
homepage = "https://github.com/fschutt/printpdf"
license = "MIT"
readme = "README.md"
description = "Rust library for reading and writing PDF files"
keywords = ["pdf", "gui", "graphics", "wkhtmltopdf"]
categories = ["gui"]
exclude = ["./assets/*", "./doc/*", "./examples/*"]
autoexamples = false
edition = "2021"

[dependencies]
lopdf = { version = "0.33.0", default-features = false, features = ["pom_parser"] }
owned_ttf_parser = { version = "0.24.0", default-features = false, features = ["std"] }
time = { version = "0.3.25", default-features = false, features = ["std"] }
allsorts = { version = "0.15", default-features = false, features = ["flate2_rust"] }
pdf-writer = { version = "0.9" }
# optional deps
image = { version = "0.25", optional = true, default-features = false, features = ["gif", "jpeg", "png", "pnm", "tiff", "bmp"] }
svg2pdf = { version = "0.10" }
ttf-parser = "0.25.0"

[features]
default = ["js-sys"]
less-optimization = [] # do not compress PDF streams, useful for debugging
images = ["image"] # enables image support with some basic formats
ico = ["image/ico", "images"] # enables extra image format .ICO
tga = ["image/tga", "images"] # enables extra image format .TGA
hdr = ["image/hdr", "images"] # enables extra image format .HDR
dds = ["image/dds", "images"] # enables extra image format .DDS
webp = ["image/webp", "images"] # enables extra image format .WEBP
rayon = ["image/rayon", "images"]  # enables multithreading for decoding images
# svg = ["svg2pdf", "usvg"] # enables SVG embedding
js-sys = ["dep:js-sys"] # enables js-sys features on wasm
rendering = [] # enables experimental rendering module (renders PDF pages to image::DynamicImage)

[package.metadata.docs.rs]
all-features = true

[target.'cfg(all(target_arch="wasm32",target_os="unknown"))'.dependencies]
js-sys = { version = "0.3.40", optional = true }

[[example]]
name = "simple"
required-features = []
